@page "/recipes"
@inject ItemService ItemService

@inject LoginService LoginService
@inject RecipeService RecipeService
@inject NavigationManager Navigation
@rendermode @(new InteractiveServerRenderMode(prerender: false))

@using Frontend.Components
@using Frontend.Components.Shared
@using Frontend.Service
@using Frontend.Models

@* <Navbar /> *@

<h3>View Recipes</h3>

 <div class="card-container">
            <div class="card-body">
                @if(isLoading)
                {
                    <p>Loading Recipes...</p>
                }
                else if(!LoginService.IsAuthenticated)
                {
                    <p>Please <a href="/login">login</a> to see recipes</p>
                }

                else if(SuggestedRecipes is null || SuggestedRecipes.Count == 0)
                {
                <p>No ingredients! Time to go to Woolies!</p>
                <button class="btn" @onclick="@(() => Navigation.NavigateTo("/shoppinglist/view"))">Shopping</button>
                }
                else
                {
                    <div class="carousel d-flex flex-row gap-3 overflow-auto">
                    @foreach (var sr in SuggestedRecipes)
                    {
                        <div class="carousel-item d-flex align-items-center gap-2">
                            <img src="@sr.ImageUrl" alt="@sr.Name" width="100" height="100" />
                            <span>@sr.Name (@sr.Category.ToString())</span>
                            <div>
                            @foreach(var i in sr.Ingredients)
                            {
                                <li>@i.Name</li>
                            }
                            </div>
                            <p>@sr.Description</p>
                        </div>
                    }
                    </div>
                }
            </div>
</div>
@code {
    private List<Recipe> recipes = new List<Recipe>(); //all recipes
    private List<Recipe> SuggestedRecipes = new List<Recipe>(); //suggested Recipes based on current fridge stock    private bool isLoading = true;
    
    private bool isLoading = true;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Console.WriteLine("Initializing Login Service...");
            await LoginService.InitializeAsync();
            
            if (LoginService.IsAuthenticated)
            {
                Console.WriteLine("Loading Recipes...");
                @* await LoadIngredients(); *@
                await LoadRecipes();
            }
            
            isLoading = false;
            StateHasChanged();
        }
    }

    @* private string GetCategoryName(int category)
    {
        return category switch
        {
            0=> "Salad",
            1=> "Soup",
            2=> "Main",
            3=> "Side",
            4=> "Vegetarian",
            5=> "Dessert",
        };
    } *@
    private async Task LoadRecipes(){
        int userId = LoginService.GetUserId();
        recipes = await RecipeService.GetAllRecipes();
        SuggestedRecipes = await RecipeService.GetSuggestedRecipes(userId);
    }
}