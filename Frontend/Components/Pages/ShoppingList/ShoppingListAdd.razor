@page "/shoppinglist/add"
@inject NavigationManager Navigation
@inject LoginService LoginService
@inject ItemService ItemService

@using Frontend.Components
@using Frontend.Components.Shared
@using Frontend.Service
@using Frontend.Models
@rendermode @(new InteractiveServerRenderMode(prerender: false))

@* <Navbar /> *@

<h3>Hi @LoginService.CurrentUser.firstName</h3>
<h3>Add Items</h3>

<EditForm Model="@model" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    @* add bootstrap form classes *@

    <div class="mb-3">
        <label class="form-label">
            Item:
            <InputText class="form-control" @bind-Value="model.Name" />
        </label>
    </div>
    <div class="mb-3">
        <label class="form-label">
            Quantity:
            <InputNumber class="form-control" @bind-Value="model.Quantity" />
        </label>
    </div>
    <button type="submit" class="btn btn-primary">Add</button>
</EditForm>

 @* Logic code block *@
@code {
    private Item model = new();
    private string err = string.Empty;
    private bool isLoading = true;
    private List<Item> items = new();
    protected override async Task OnAfterRenderAsync(bool firstRender)//this manages loging status
    {
        if (firstRender)
        {
            await LoginService.InitializeAsync();
            
            if (LoginService.IsAuthenticated)
            {
                await LoadItems();
            }
            
            isLoading = false;
            StateHasChanged();
        }
    } 
    private async Task HandleValidSubmit()
    {
        //IngredientService.AddIngredient(model);
        Console.WriteLine("Form submitted successfully!");
        Console.WriteLine($"Name: {model.Name}");
        
        var userId = LoginService.GetUserId();
       // model.UserId = userId;
        var success = await ItemService.AddItem(model);
        
        if(success){
            Navigation.NavigateTo("/shoppinglist/view");
        }else{
            err = "Invalid input. Please try again.";
        }
    }

    private void ClearForm() => model = new();

     private async Task LoadItems(){

    int userId = LoginService.GetUserId();
    items = await ItemService.GetAllItems(userId);

    }

}


