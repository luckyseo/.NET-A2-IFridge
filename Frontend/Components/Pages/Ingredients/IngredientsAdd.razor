@page "/ingredients/add"
@inject NavigationManager Navigation
@inject IngredientService IngredientService
@using Frontend.Components
@using Frontend.Components.Shared
@using Frontend.Service
@using Frontend.Models
@rendermode InteractiveServer

<Navbar />


<h3>Add New Ingredients</h3>

<EditForm Model="@model" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    @* add bootstrap form classes *@

    <div class="mb-3">
        <label class="form-label">
            Ingredient:
            <InputText @bind-Value="model.Name" />
        </label>
    </div>

    @* Dropdown list *@
    <div class="mb-3">
        <label class="form-label">
            Category:
            <InputSelect class="form-select" @bind-Value="model.Category">
                <option disabled selected value="">All</option>
                <option>Meat and fish</option>
                <option>Vegetables</option>
                <option>Fruits</option>
                <option>Carbs</option>
                <option>Spices and herbs</option>
                <option>Herbs and spices</option>
                <option>Other</option>
            </InputSelect>
        </label>
    </div>

    <div class="mb-3">
        <label class="form-label">
            Quantity:
            <InputNumber class="form-control" @bind-Value="model.Quantity" />
        </label>
    </div>

    <div class="mb-3">
        <label class="form-label">
            Opened date:
            <InputDate class="form-control" @bind-Value="model.OpenedDate" />
        </label>
    </div>

    <div class="mb-3">
        <label class="form-label">
            Expired date
            <InputDate class="form-control" @bind-Value="model.ExpiredDate" />
        </label>
    </div>

    <button type="submit" class="btn btn-primary"">Add</button>
</EditForm>

 @* Logic code block *@
@code {
    private Ingredient model = new();
    private void HandleValidSubmit()
    {
        //IngredientService.AddIngredient(model);
        Navigation.NavigateTo("/ingredients/view");
    }

    private void ClearForm() => model = new();
}

@* References *@
@* guardrex. (2024, November 12). ASP.NET Core Blazor forms overview. Microsoft.com. https://learn.microsoft.com/en-us/aspnet/core/blazor/forms/?view=aspnetcore-9.0 *@